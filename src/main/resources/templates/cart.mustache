<!DOCTYPE html>
<html lang="en">
<head>
    <head>
        <meta charset="UTF-8">
        <link rel="stylesheet" href="/static/css/main.css" media="all">
        <link rel="stylesheet" href="/static/css/blocks/cart.css" media="all">
        <link rel="stylesheet" href="/static/css/print.css" media="print">
        <link rel="icon" href="/static/img/favicon.svg" type="image/x-icon">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Car Parts Store - Cart</title>
    </head>
</head>
<body>
{{>partials/header}}
<div class="cart-container">
    <div class="cart-title">Cart</div>
    {{^isCartEmpty}}
        <div class="cart-content">
            <div class="cart-items-list">
                {{#cartItems}}
                    <div class="cart-item" id="{{cartItemUUID}}">
                        <img class="cart-item-picture" src="{{cartItemProductPreviewPicture}}" alt="">
                        <div class="cart-item-content">
                            <div class="cart-item-info">
                                <a class="cart-item-name" href="/product/{{cartItemProductUUID}}">{{cartItemProductName}}</a>
                                <div class="cart-item-price">$
                                    <span class="cart-item-price-value">{{cartItemProductPriceInPennies}}</span></div>
                            </div>
                            <div class="cart-item-buttons">
                                <div class="cart-item-quantity-buttons">
                                    <button onclick="decreaseQuantity('{{cartItemUUID}}')">&#8211;</button>
                                    <span class="cart-item-quantity-value">{{cartItemQuantity}}</span>
                                    <button onclick="increaseQuantity('{{cartItemUUID}}')">+</button>
                                </div>
                                <button class="cart-item-remove-button" onclick="removeItem('{{cartItemUUID}}')">Remove</button>
                            </div>
                        </div>
                    </div>
                {{/cartItems}}
            </div>
            <div class="cart-summary-tile">
                <div class="cart-summary-title">total:</div>
                <div class="cart-summary-price-quantity">
                    <div class="cart-summary-total-quantity"><span class="total-quantity-value"></span> items</div>
                    <div class="cart-summary-total-price">$<span class="cart-summary-total-price-value"></span>
                    </div>
                </div>
                <button type="submit" class="cart-summary-order-btn">Proceed</button>
            </div>
        </div>
    {{/isCartEmpty}}
    {{#isCartEmpty}}
        <div class="cart-empty-tile">
            <img class="cart-empty-tile-img" src="/static/img/favicon.svg" alt="">
            <div class="cart-empty-tile-title">Cart is empty</div>
            <div class="cart-empty-tile-buttons">
                <a href="/">To main page</a>
                <a href="/catalog">Browse catalog</a>
            </div>
        </div>
    {{/isCartEmpty}}
</div>
{{>partials/footer}}
<script src="/static/js/elements.js"></script>
<script>
    calculateValues();

    var priceElements = document.querySelectorAll('[class*="price-value"]');
    priceElements.forEach(function (priceElement) {
        var value = parseInt(priceElement.innerHTML);
        priceElement.innerHTML = (value/100).toFixed(2);
    });

    function decreaseQuantity(itemUUID) {
        fetch(`/api/cart/decrease`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ cartItemUUID : itemUUID })
        }).then(response => {
            if (response.ok) {
                response.json().then(cartItem => {
                    if (cartItem.cartItemQuantity < 1) {
                        removeItem(cartItem.cartItemUUID);
                    } else {
                        var cartItemElement = document.getElementById(`${cartItem.cartItemUUID}`);
                        cartItemElement.querySelector('.cart-item-quantity-value').innerHTML = cartItem.cartItemQuantity;
                        calculateValues();
                    }
                })
            }
            else console.log(response.status);
        });
    }

    function increaseQuantity(itemUUID) {
        fetch(`/api/cart/increase`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ cartItemUUID : itemUUID })
        }).then(response => {
            if (response.ok) {
                response.json().then(cartItem => {
                    var cartItemElement = document.getElementById(`${cartItem.cartItemUUID}`);
                    cartItemElement.querySelector('.cart-item-quantity-value').innerHTML = cartItem.cartItemQuantity;
                    calculateValues();
                })
            }
            else console.log(response.status);
        });
    }

    function removeItem(itemUUID) {
        fetch(`/api/cart`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ cartItemUUID : itemUUID })
        }).then(response => {
            if (response.ok) {
                var cartItemElement = document.getElementById(`${itemUUID}`);
                cartItemElement.remove();
                if (document.querySelectorAll('.cart-item').length > 0) {
                    calculateValues();
                }
                else {
                    window.location.href = "/cart";
                }
            }
            else console.log(response.status);
        });
    }

    function calculateValues() {
        var totalPrice = 0;
        var totalQuantity = 0;
        var cartItems = document.querySelectorAll('.cart-item');
        cartItems.forEach(function (cartItem) {
            var cartItemQuantity = parseInt(cartItem.querySelector('.cart-item-quantity-value').innerHTML);
            totalQuantity += cartItemQuantity;
            totalPrice += parseFloat(cartItem.querySelector('.cart-item-price-value').innerHTML)*cartItemQuantity;
        });
        document.querySelector('[class*="cart-summary-total-price-value"]').innerHTML = totalPrice;
        document.querySelector('[class*="total-quantity-value"]').innerHTML = totalQuantity;
    }
</script>
</body>
</html>